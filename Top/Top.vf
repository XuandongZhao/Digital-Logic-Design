////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Top.vf
// /___/   /\     Timestamp : 12/28/2016 14:24:05
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family kintex7 -verilog D:/zxd_CS/LCDF/Top/Top.vf -w D:/zxd_CS/LCDF/Top/Code/Top.sch
//Design Name: Top
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module Counter_4bit_MUSER_Top(clk, 
                              Qa, 
                              Qb, 
                              Qc, 
                              Qd, 
                              Rc);

    input clk;
   output Qa;
   output Qb;
   output Qc;
   output Qd;
   output Rc;
   
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_13;
   wire XLXN_15;
   wire XLXN_17;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_22;
   wire Qa_DUMMY;
   wire Qb_DUMMY;
   wire Qc_DUMMY;
   wire Qd_DUMMY;
   
   assign Qa = Qa_DUMMY;
   assign Qb = Qb_DUMMY;
   assign Qc = Qc_DUMMY;
   assign Qd = Qd_DUMMY;
   INV  XLXI_8 (.I(Qa_DUMMY), 
               .O(XLXN_13));
   INV  XLXI_9 (.I(Qb_DUMMY), 
               .O(XLXN_22));
   INV  XLXI_10 (.I(Qc_DUMMY), 
                .O(XLXN_15));
   INV  XLXI_11 (.I(Qd_DUMMY), 
                .O(XLXN_17));
   NOR4  XLXI_12 (.I0(XLXN_13), 
                 .I1(XLXN_22), 
                 .I2(XLXN_15), 
                 .I3(XLXN_17), 
                 .O(Rc));
   NOR3  XLXI_13 (.I0(XLXN_13), 
                 .I1(XLXN_22), 
                 .I2(XLXN_15), 
                 .O(XLXN_19));
   NOR2  XLXI_14 (.I0(XLXN_13), 
                 .I1(XLXN_22), 
                 .O(XLXN_20));
   FD #( .INIT(1'b0) ) XLXI_15 (.C(clk), 
               .D(XLXN_13), 
               .Q(Qa_DUMMY));
   FD #( .INIT(1'b0) ) XLXI_16 (.C(clk), 
               .D(XLXN_2), 
               .Q(Qb_DUMMY));
   FD #( .INIT(1'b0) ) XLXI_17 (.C(clk), 
               .D(XLXN_3), 
               .Q(Qc_DUMMY));
   FD #( .INIT(1'b0) ) XLXI_18 (.C(clk), 
               .D(XLXN_4), 
               .Q(Qd_DUMMY));
   XNOR2  XLXI_19 (.I0(XLXN_22), 
                  .I1(Qa_DUMMY), 
                  .O(XLXN_2));
   XNOR2  XLXI_21 (.I0(XLXN_17), 
                  .I1(XLXN_19), 
                  .O(XLXN_4));
   XNOR2  XLXI_22 (.I0(XLXN_15), 
                  .I1(XLXN_20), 
                  .O(XLXN_3));
endmodule
`timescale 1ns / 1ps

module MUX2T1_8_MUSER_Top(I0, 
                          I1, 
                          s, 
                          O);

    input [7:0] I0;
    input [7:0] I1;
    input s;
   output [7:0] O;
   
   wire XLXN_41;
   wire XLXN_59;
   wire XLXN_60;
   wire XLXN_61;
   wire XLXN_62;
   wire XLXN_63;
   wire XLXN_64;
   wire XLXN_65;
   wire XLXN_66;
   wire XLXN_67;
   wire XLXN_68;
   wire XLXN_69;
   wire XLXN_70;
   wire XLXN_71;
   wire XLXN_72;
   wire XLXN_73;
   wire XLXN_74;
   
   INV  XLXI_1 (.I(s), 
               .O(XLXN_41));
   AND2  XLXI_21 (.I0(I0[0]), 
                 .I1(XLXN_41), 
                 .O(XLXN_59));
   AND2  XLXI_22 (.I0(I1[0]), 
                 .I1(s), 
                 .O(XLXN_60));
   AND2  XLXI_23 (.I0(I0[1]), 
                 .I1(XLXN_41), 
                 .O(XLXN_61));
   AND2  XLXI_24 (.I0(I1[1]), 
                 .I1(s), 
                 .O(XLXN_62));
   AND2  XLXI_25 (.I0(I0[2]), 
                 .I1(XLXN_41), 
                 .O(XLXN_63));
   AND2  XLXI_26 (.I0(I1[2]), 
                 .I1(s), 
                 .O(XLXN_64));
   AND2  XLXI_27 (.I0(I0[3]), 
                 .I1(XLXN_41), 
                 .O(XLXN_65));
   AND2  XLXI_28 (.I0(I1[3]), 
                 .I1(s), 
                 .O(XLXN_66));
   AND2  XLXI_29 (.I0(I0[4]), 
                 .I1(XLXN_41), 
                 .O(XLXN_67));
   AND2  XLXI_30 (.I0(I1[4]), 
                 .I1(s), 
                 .O(XLXN_68));
   AND2  XLXI_31 (.I0(I0[5]), 
                 .I1(XLXN_41), 
                 .O(XLXN_69));
   AND2  XLXI_32 (.I0(I1[5]), 
                 .I1(s), 
                 .O(XLXN_70));
   AND2  XLXI_33 (.I0(I0[6]), 
                 .I1(XLXN_41), 
                 .O(XLXN_71));
   AND2  XLXI_34 (.I0(I1[6]), 
                 .I1(s), 
                 .O(XLXN_72));
   AND2  XLXI_35 (.I0(I0[7]), 
                 .I1(XLXN_41), 
                 .O(XLXN_73));
   AND2  XLXI_36 (.I0(I1[7]), 
                 .I1(s), 
                 .O(XLXN_74));
   OR2  XLXI_37 (.I0(XLXN_60), 
                .I1(XLXN_59), 
                .O(O[0]));
   OR2  XLXI_38 (.I0(XLXN_62), 
                .I1(XLXN_61), 
                .O(O[1]));
   OR2  XLXI_39 (.I0(XLXN_64), 
                .I1(XLXN_63), 
                .O(O[2]));
   OR2  XLXI_40 (.I0(XLXN_66), 
                .I1(XLXN_65), 
                .O(O[3]));
   OR2  XLXI_41 (.I0(XLXN_68), 
                .I1(XLXN_67), 
                .O(O[4]));
   OR2  XLXI_42 (.I0(XLXN_70), 
                .I1(XLXN_69), 
                .O(O[5]));
   OR2  XLXI_43 (.I0(XLXN_72), 
                .I1(XLXN_71), 
                .O(O[6]));
   OR2  XLXI_44 (.I0(XLXN_74), 
                .I1(XLXN_73), 
                .O(O[7]));
endmodule
`timescale 1ns / 1ps

module MUX2T1_64_MUSER_Top(I0, 
                           I1, 
                           s, 
                           O);

    input [63:0] I0;
    input [63:0] I1;
    input s;
   output [63:0] O;
   
   
   MUX2T1_8_MUSER_Top  XLXI_1 (.I0(I0[7:0]), 
                              .I1(I1[7:0]), 
                              .s(s), 
                              .O(O[7:0]));
   MUX2T1_8_MUSER_Top  XLXI_2 (.I0(I0[15:8]), 
                              .I1(I1[15:8]), 
                              .s(s), 
                              .O(O[15:8]));
   MUX2T1_8_MUSER_Top  XLXI_3 (.I0(I0[23:16]), 
                              .I1(I1[23:16]), 
                              .s(s), 
                              .O(O[23:16]));
   MUX2T1_8_MUSER_Top  XLXI_4 (.I0(I0[31:24]), 
                              .I1(I1[31:24]), 
                              .s(s), 
                              .O(O[31:24]));
   MUX2T1_8_MUSER_Top  XLXI_5 (.I0(I0[39:32]), 
                              .I1(I1[39:32]), 
                              .s(s), 
                              .O(O[39:32]));
   MUX2T1_8_MUSER_Top  XLXI_6 (.I0(I0[47:40]), 
                              .I1(I1[47:40]), 
                              .s(s), 
                              .O(O[47:40]));
   MUX2T1_8_MUSER_Top  XLXI_7 (.I0(I0[55:48]), 
                              .I1(I1[55:48]), 
                              .s(s), 
                              .O(O[55:48]));
   MUX2T1_8_MUSER_Top  XLXI_8 (.I0(I0[63:56]), 
                              .I1(I1[63:56]), 
                              .s(s), 
                              .O(O[63:56]));
endmodule
`timescale 1ns / 1ps

module Display_MUSER_Top(clk, 
                         flash, 
                         Hexs, 
                         LES, 
                         point, 
                         rst, 
                         Start, 
                         SW0, 
                         seg_clk, 
                         seg_clrn, 
                         SEG_PEN, 
                         seg_sout);

    input clk;
    input flash;
    input [31:0] Hexs;
    input [7:0] LES;
    input [7:0] point;
    input rst;
    input Start;
    input SW0;
   output seg_clk;
   output seg_clrn;
   output SEG_PEN;
   output seg_sout;
   
   wire [63:0] XLXN_34;
   wire [63:0] XLXN_35;
   wire [63:0] XLXN_39;
   
   P2S  XLXI_1 (.clk(clk), 
               .P_Data(XLXN_39[63:0]), 
               .rst(rst), 
               .Serial(Start), 
               .EN(SEG_PEN), 
               .sout(seg_sout), 
               .s_clk(seg_clk), 
               .s_clrn(seg_clrn));
   HexTo8SEG  XLXI_2 (.flash(flash), 
                     .Hexs(Hexs[31:0]), 
                     .LES(LES[7:0]), 
                     .points(point[7:0]), 
                     .SEG_TXT(XLXN_34[63:0]));
   MUX2T1_64_MUSER_Top  XLXI_3 (.I0(XLXN_34[63:0]), 
                               .I1(XLXN_35[63:0]), 
                               .s(SW0), 
                               .O(XLXN_39[63:0]));
   SSeg_map  XLXI_4 (.Disp_num({Hexs[31:0], Hexs[31:0]}), 
                    .Seg_map(XLXN_35[63:0]));
endmodule
`timescale 1ns / 1ps

module Top(clk_100mhz, 
           K_COL, 
           RSTN, 
           SW, 
           Buzzer, 
           CR, 
           K_ROW, 
           LEDCLK, 
           LEDCLR, 
           LEDDT, 
           LEDEN, 
           RDY, 
           readn, 
           SEGCLK, 
           SEGCLR, 
           SEGDT, 
           SEGEN);

    input clk_100mhz;
    input [3:0] K_COL;
    input RSTN;
    input [15:0] SW;
   output Buzzer;
   output CR;
   output [4:0] K_ROW;
   output LEDCLK;
   output LEDCLR;
   output LEDDT;
   output LEDEN;
   output RDY;
   output readn;
   output SEGCLK;
   output SEGCLR;
   output SEGDT;
   output SEGEN;
   
   wire [31:0] Bi;
   wire [7:0] blink;
   wire [3:0] BTN_OK;
   wire Co;
   wire [31:0] Div;
   wire G;
   wire N0;
   wire [3:0] Pulse;
   wire Qa;
   wire Qb;
   wire Qc;
   wire Qd;
   wire Rc_4;
   wire Rc_32;
   wire rst;
   wire [15:0] SW_OK;
   wire [63:0] s_point;
   wire [31:0] Time_out;
   wire [63:0] t_blink;
   wire V5;
   wire [4:0] XLXN_9;
   wire [31:0] XLXN_22;
   wire [7:0] XLXN_23;
   wire [7:0] XLXN_24;
   wire [31:0] XLXN_26;
   wire [31:0] XLXN_27;
   wire [31:0] XLXN_59;
   wire [31:0] XLXN_62;
   wire [31:0] XLXN_70;
   wire [31:0] XLXN_74;
   wire [31:0] XLXN_79;
   wire zero;
   wire RDY_DUMMY;
   wire readn_DUMMY;
   
   assign RDY = RDY_DUMMY;
   assign readn = readn_DUMMY;
   clkdiv  M1 (.clk(clk_100mhz), 
              .rst(rst), 
              .clkdiv(Div[31:0]));
   SAnti_jitter  M2 (.clk(clk_100mhz), 
                    .Key_y(K_COL[3:0]), 
                    .readn(readn_DUMMY), 
                    .RSTN(RSTN), 
                    .SW(SW[15:0]), 
                    .BTN_OK(BTN_OK[3:0]), 
                    .CR(CR), 
                    .Key_out(XLXN_9[4:0]), 
                    .Key_ready(RDY_DUMMY), 
                    .Key_x(K_ROW[4:0]), 
                    .pulse_out(Pulse[3:0]), 
                    .rst(rst), 
                    .SW_OK(SW_OK[15:0]));
   Display_MUSER_Top  M3 (.clk(clk_100mhz), 
                         .flash(Div[25]), 
                         .Hexs(XLXN_22[31:0]), 
                         .LES(XLXN_24[7:0]), 
                         .point(XLXN_23[7:0]), 
                         .rst(rst), 
                         .Start(Div[20]), 
                         .SW0(SW_OK[0]), 
                         .seg_clk(SEGCLK), 
                         .seg_clrn(SEGCLR), 
                         .SEG_PEN(SEGEN), 
                         .seg_sout(SEGDT));
   SEnter_2_32  M4 (.BTN(BTN_OK[2:0]), 
                   .clk(clk_100mhz), 
                   .Ctrl({SW_OK[7:5], SW_OK[15], SW_OK[0]}), 
                   .Din(XLXN_9[4:0]), 
                   .D_ready(RDY_DUMMY), 
                   .Ai(XLXN_62[31:0]), 
                   .Bi(Bi[31:0]), 
                   .blink(blink[7:0]), 
                   .readn(readn_DUMMY));
   Multi_8CH32  M5 (.clk(clk_100mhz), 
                   .Data0(XLXN_62[31:0]), 
                   .data1(Bi[31:0]), 
                   .data2(XLXN_70[31:0]), 
                   .data3(XLXN_26[31:0]), 
                   .data4(XLXN_74[31:0]), 
                   .data5(XLXN_27[31:0]), 
                   .data6(Time_out[31:0]), 
                   .data7(Div[31:0]), 
                   .EN(V5), 
                   .LES(t_blink[63:0]), 
                   .point_in(s_point[63:0]), 
                   .rst(rst), 
                   .Test(SW_OK[7:5]), 
                   .Disp_num(XLXN_22[31:0]), 
                   .LE_out(XLXN_24[7:0]), 
                   .point_out(XLXN_23[7:0]));
   GPIO  M6 (.clk(clk_100mhz), 
            .EN(V5), 
            .P_Data({Div[31:8], Rc_32, Rc_4, Qd, Qc, Qb, Qa, N0, Co}), 
            .rst(rst), 
            .Start(Div[20]), 
            .GPIOf0(), 
            .led_clk(LEDCLK), 
            .led_clrn(LEDCLR), 
            .LED_PEN(LEDEN), 
            .led_sout(LEDDT));
   ALU  M8 (.A(XLXN_59[31:0]), 
           .ALU_Ctr(SW_OK[4:2]), 
           .B(XLXN_79[31:0]), 
           .Co(Co), 
           .overflow(), 
           .res(XLXN_70[31:0]), 
           .zero(zero));
   Counter_4bit_MUSER_Top  M9 (.clk(Div[26]), 
                              .Qa(Qa), 
                              .Qb(Qb), 
                              .Qc(Qc), 
                              .Qd(Qd), 
                              .Rc(Rc_4));
   counter_32bit_rev  M9_1 (.clk(Div[26]), 
                           .Load(BTN_OK[1]), 
                           .PData(XLXN_62[31:0]), 
                           .s(SW_OK[8]), 
                           .cnt(XLXN_26[31:0]), 
                           .Rc(Rc_32));
   Regs_8_32  M10 (.Addr_A(Bi[2:0]), 
                  .Addr_B(Bi[6:4]), 
                  .Addr_W(Bi[10:8]), 
                  .clk(BTN_OK[3]), 
                  .cr(rst), 
                  .Di(XLXN_70[31:0]), 
                  .WE(Bi[12]), 
                  .QA(XLXN_74[31:0]), 
                  .QB(XLXN_79[31:0]));
   MUX2T1_32  M11 (.I0(XLXN_62[31:0]), 
                  .I1(XLXN_74[31:0]), 
                  .s(Bi[13]), 
                  .o(XLXN_59[31:0]));
   shift_32  M12 (.clear(rst), 
                 .clk(Div[26]), 
                 .PData(XLXN_62[31:0]), 
                 .SL(SW_OK[9]), 
                 .SR(SW_OK[10]), 
                 .S0(BTN_OK[1]), 
                 .S1(BTN_OK[0]), 
                 .Q(XLXN_27[31:0]));
   Wall_CLOCK  M13 (.adj_push(BTN_OK[2:0]), 
                   .clk(Div[0]), 
                   .inc(Div[23]), 
                   .reset(V5), 
                   .s_point(s_point[51:48]), 
                   .Time_out(Time_out[15:0]), 
                   .t_blink(t_blink[51:48]));
   VCC  XLXI_8 (.P(V5));
   GND  XLXI_9 (.G(G));
   BUF  XLXI_10 (.I(V5), 
                .O(Buzzer));
endmodule
